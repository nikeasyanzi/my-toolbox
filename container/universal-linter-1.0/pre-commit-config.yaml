fail_fast: false
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.1.0
    hooks:
    -   id: check-ast
        #Simply check whether files parse as valid python.
    -   id: check-case-conflict
        #Check for files with names that would conflict on a case-insensitive filesystem like MacOS HFS+ or Windows FAT.
    -   id: check-docstring-first
        #Checks for a common error of placing code before the docstring.
    -   id: check-executables-have-shebangs
        #Checks that non-binary executables have a proper shebang.
    -   id: pretty-format-json
    -   id: detect-private-key
    -   id: check-added-large-files
    -   id: check-merge-conflict
    -   id: check-json
    -   id: check-yaml
    -   id: detect-private-key
    -   id: end-of-file-fixer
    -   id: trailing-whitespace
    -   id: mixed-line-ending
        #Replaces or checks mixed line ending.
-   repo: https://gitlab.com/pycqa/flake8
    rev: 4.0.1
    hooks:
    -   id: flake8
        files: .py$
        args: # arguments to configure flake8
        - "--max-line-length=79"
        #emit a warning if the McCabe complexity of a function is higher than the value
        - "--max-complexity=18"
        - "--select=B,C,E,F,W,T4,B9"
        # these are errors that will be ignored by flake8
        # check out their meaning here
        # https://flake8.pycqa.org/en/latest/user/error-codes.html
        # E203: Whitespace before ':' (for black)
        # E501: Line too long
        # W503: Line break occurred before a binary operator
        - "--ignore=E203,E266,E501,W503,F403,F401,E402"
-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.950
    hooks:
    -   id: mypy
        args: [--ignore-missing-imports]
-   repo: https://github.com/ambv/black
    rev: 22.3.0
    hooks:
    - id: black
      language_version: python3.8
      args: # arguments to configure black
        - --line-length=79
        - --include='\.pyi?$'
        # these folders wont be formatted by black
        - --exclude="""\.git |
          \.__pycache__|
          staging_area|
          template"""
-   repo: https://github.com/asottile/reorder_python_imports
    rev: v2.4.0
    hooks:
    -   id: reorder-python-imports
-   repo: https://github.com/commitizen-tools/commitizen
    rev: v2.16.0
    hooks:
      - id: commitizen
        stages: [commit-msg]
#-   repo: https://github.com/Lucas-C/pre-commit-hooks-safety
#    rev: v1.2.1
#    hooks:
#    -   id: python-safety-dependencies-check
#-   repo: https://github.com/Lucas-C/pre-commit-hooks-bandit
#    rev: v1.0.4
#    hooks:
#    -   id: python-bandit-vulnerability-check
#        args: [-l, --recursive, -x, tests]
#        files: .py$

  - repo: https://github.com/pocc/pre-commit-hooks
    rev: v1.3.5
    hooks:
      - id: clang-format
        args: [-i, --style=google]

  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.17.0
    hooks:
      - id: yamllint
  
  - repo: https://github.com/google/yamlfmt
    rev: v0.8.0
    hooks:
      - id: yamlfmt
  
  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 2.1.6
    hooks:
      - id: shellcheck
      - id: shfmt

  - repo: https://github.com/detailyang/pre-commit-shell
    rev: 1.0.5
    hooks:
      - id: shell-lint
